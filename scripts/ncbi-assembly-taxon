#! /usr/bin/env perl

use strict;
use warnings FATAL => 'all';
use Carp::Always;

# use FindBin;
# use lib "$FindBin::Bin";
# use Xyzzy;

use constant { TRUE => 1, FALSE => 0 };

# ------------------------------------------------------------------------
# Process the command line
# ------------------------------------------------------------------------

use File::Basename;
use Getopt::Std;

our $opt_h;
our $opt_n;

sub usage {
  my $progname = basename($0);
  print STDERR "Usage: cat ... | $progname [options] taxon_id ...\n";
  print STDERR "-h - print help\n";
  print STDERR "-n FILE - nodes.dmp from taxdump (required)\n";
  exit(@_);
}

my $stat = getopts('hn:');
if (!$stat) {
  usage(1);
}
if ($opt_h) {
  usage();
}

if ( !defined($opt_n) ) {
  usage(1);
}


# ------------------------------------------------------------------------
# Read nodes.dmp
# ------------------------------------------------------------------------

my $children = {};

open(my $fh, "<", $opt_n) || die "cannot open <<$opt_n>>,";
while (<$fh>) {
  chomp;
  my ($tax_id,$parent_tax_id) = split(/\t\|\t/);
  (defined($parent_tax_id)) || die "Ill-formed line: <<$_>>,";
  my $a = $children->{$parent_tax_id};
  if (!defined($a)) {
    $a = $children->{$parent_tax_id} = [];
  }
  push @$a, $tax_id;
}
close $fh;

# ------------------------------------------------------------------------
# Find all of the taxids that are children of the command line args
# ------------------------------------------------------------------------

my $taxids = {};

my @queue = @ARGV;

while (my $id = pop @queue) {
  if ($taxids->{$id}) {
    die; # Oops! The taxon tree is a DAG!
  }
  $taxids->{$id} = TRUE;
  my $kids = $children->{$id};
  if ( $kids ) {
    push @queue, @{$kids};
  }
}

# ------------------------------------------------------------------------
# Filter the assembly file by the collected taxid's
# ------------------------------------------------------------------------

while (<STDIN>) {
  chomp;
  if ( /^#/ ) {
    print $_,"\n";
    next;
  }
  my ($assembly_accession,$bioproject,$biosample,$wgs_master,
      $refseq_category,$taxid,$species_taxid,$organism_name,$infraspecific_name,
      $isolate,$version_status,$assembly_level,$release_type,$genome_rep,
      $seq_rel_date,$asm_name,$submitter,$gbrs_paired_asm,$paired_asm_comp,
      $ftp_path) = split(/\t/);
  if ($taxids->{$taxid}) {
      print "$_\n";
    }
}
