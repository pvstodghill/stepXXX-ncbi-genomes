#! /usr/bin/env perl

use strict;
use warnings FATAL => 'all';
use Carp::Always;

# use FindBin;
# use lib "$FindBin::Bin";
# use Xyzzy;

use constant { TRUE => 1, FALSE => 0 };

# ------------------------------------------------------------------------

use File::Basename;
use Getopt::Std;

our $opt_A = 0;
our $opt_T = 0;
our $opt_a = 0;
our $opt_b = 0;
our $opt_f = 0;
our $opt_h;
our $opt_n = 0;
our $opt_p = 0;
our $opt_t = 0;


sub usage {
  my $progname = basename($0);
  print STDERR "Usage: $progname [options] [target_dir]\n";
  print STDERR "-h - print help\n";
  print STDERR "One of the following is required:\n";
  print STDERR "-A - fetch everything\n";
  print STDERR "-T - fetch GCX_*_feature_table.txt.gz\n";
  print STDERR "-a - fetch GCX_*_protein.faa.gz\n";
  print STDERR "-b - fetch GCX_*_genomic.gbff.gz\n";
  print STDERR "-f - fetch GCX_*_genomic.gff.gz\n";
  print STDERR "-n - fetch GCX_*_genomic.fna.gz\n";
  print STDERR "-p - fetch GCX_*_protein.gpff.gz\n";
  print STDERR "-t - fetch,\n";
  print STDERR "       GCX_*_assembly_report.txt\n";
  print STDERR "       GCX_*_assembly_stats.txt\n";
  print STDERR "       README.txt\n";
  print STDERR "       md5checksums.txt\n";

  exit(@_);
}

my $stat = getopts('ATabfhnpt');
if (!$stat) {
  usage(1);
}
if ($opt_h) {
  usage();
}

if ( 0 == ($opt_A + $opt_T + $opt_a + $opt_b + $opt_f + $opt_n +
	   $opt_p + $opt_t) ) {
  usage(1);
}



my ($dir,$extra) = @ARGV;
if (defined($extra)) { usage(1); }
if (!defined($dir)) { $dir = "."; }

if ( ! -d ($dir."/") ) {
  print STDERR "Directory \"$dir\" does not exist.\n";
  exit(1);
}

# ------------------------------------------------------------------------

my @accept_args;

# -t
#   GCX_*_assembly_report.txt
#   GCX_*_assembly_stats.txt
#   README.txt
#   md5checksums.txt
if ($opt_t) {
    push @accept_args, ' -A"*.txt"';
}
# -T
#   GCX_*_feature_table.txt.gz
if ($opt_T) {
    push @accept_args, ' -A"*.txt.gz"';
}
# -n
#   GCX_*_genomic.fna.gz
if ($opt_n) {
    push @accept_args, ' -A"*.fna.gz"';
}
# -b
#   GCX_*_genomic.gbff.gz
if ($opt_b) {
    push @accept_args, ' -A"*.gbff.gz"';
}
# -f
#   GCX_*_genomic.gff.gz
if ($opt_f) {
    push @accept_args, ' -A"*.gff.gz"';
}
# -a
#   GCX_*_protein.faa.gz
if ($opt_a) {
    push @accept_args, ' -A"*.faa.gz"';
}
# -p
#   GCX_*_protein.gpff.gz
if ($opt_p) {
    push @accept_args, ' -A"*.gpff.gz"';
}

if ($opt_A) {
    @accept_args = ();
}

# ------------------------------------------------------------------------

while (<STDIN>) {
  chomp;
  if ( /^#/ ) {
    next;
  }
  my ($assembly_accession,$bioproject,$biosample,$wgs_master,
      $refseq_category,$taxid,$species_taxid,$organism_name,$infraspecific_name,
      $isolate,$version_status,$assembly_level,$release_type,$genome_rep,
      $seq_rel_date,$asm_name,$submitter,$gbrs_paired_asm,$paired_asm_comp,
      $ftp_path) = split(/\t/);
  $ftp_path .= "/";
  print join(" ","wget", "--mirror", "-q", "-nH", "-P".$dir, "--cut-dirs=2",@accept_args,$ftp_path),"\n";
}
