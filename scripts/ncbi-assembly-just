#! /usr/bin/env perl

use strict;
use warnings;
use Carp::Always;

use constant { TRUE => 1, FALSE => 0 };

use File::Basename;
use Getopt::Std;

our $opt_c;
our $opt_h;
our $opt_l;
our $opt_r;
our $opt_R;

sub usage {
  my $progname = basename($0);
  print STDERR "Usage: $progname [options] ...\n";
  print STDERR "-c - just closed\n";
  print STDERR "-h - print help\n";
  print STDERR "-l - just latest\n";
  print STDERR "-r - just reference or representative\n";
  print STDERR "-R - just reference\n";
  exit(@_);
}

my $stat = getopts('chlrR');
if (!$stat) {
  usage(1);
}
if ($opt_h) {
  usage();
}


while (<STDIN>) {
  chomp;
  if ( /^# assembly_accession/ ) {
    print $_,"\n";
    next;
  }
  if ( /^#/ ) {
    next;
  }
  my ($assembly_accession,$bioproject,$biosample,$wgs_master,
      $refseq_category,$taxid,$species_taxid,$organism_name,$infraspecific_name,
      $isolate,$version_status,$assembly_level,$release_type,$genome_rep,
      $seq_rel_date,$asm_name,$submitter,$gbrs_paired_asm,$paired_asm_comp,
      $ftp_path) = split(/\t/);
  if ( $opt_l && !($version_status eq "latest") ) {
    next;
  }
  if ( $opt_r && !($refseq_category eq "reference genome" || $refseq_category eq "representative genome") ) {
    next;
  }
  if ( $opt_R && !($refseq_category eq "reference genome") ) {
    next;
  }
  if ( $opt_c && !($assembly_level eq "Complete Genome") ) {
    next;
  }
  print "$_\n";
}
